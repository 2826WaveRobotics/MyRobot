// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "PneumaticsTester.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

PneumaticsTester::PneumaticsTester() : Subsystem("PneumaticsTester") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	solenoid0 = RobotMap::pneumaticsTesterSolenoid0;
	solenoid1 = RobotMap::pneumaticsTesterSolenoid1;
	solenoid2 = RobotMap::pneumaticsTesterSolenoid2;
	solenoid3 = RobotMap::pneumaticsTesterSolenoid3;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void PneumaticsTester::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void PneumaticsTester::m_setSolenoidState(int solenoidNum, int state)
{
	switch(solenoidNum)
	{
		case 0:
			solenoid0->Set(state);
			break;
		case 1:
			solenoid1->Set(state);
			break;
		case 2:
			solenoid2->Set(state);
			break;
		case 3:
			solenoid3->Set(state);
			break;
		default:
			//do nothing
	}

}//m_setSolenoidState

